# docker compose --profile dev up -d
services:
  db:
    image: mysql:8.0
    container_name: dev-piku-mysql
    ports:
      - "9915:3306" # MySQL 포트를 환경 변수로 관리
    profiles:
      - "dev"
    environment:
      MYSQL_ROOT_PASSWORD: ${DEV_DB_PASSWORD:-1234}
      MYSQL_DATABASE: piku
    volumes:
      - dev-piku-data:/var/lib/mysql
    networks:
      - dev-piku-network
  web:
    image: piku:latest
    build:
      context: .
    container_name: piku-web
    ports:
      - "80:8080" # 웹 포트를 환경 변수로 관리
    profiles:
      - "prod"
    environment:
      PROFILE: prod
      PROD_DB_URL: ${PROD_DB_URL:-jdbc:mysql://prod-db:3306/piku}
      PROD_DB_USERNAME: ${PROD_DB_USERNAME:-root}
      PROD_DB_PASSWORD: ${PROD_DB_PASSWORD:-1234}
      JWT_KEY: ${JWT_KEY}
    depends_on:
      - prod-db
    networks:
      - piku-network

  dev-web:
    image: piku:latest
    build:
      context: .
    container_name: piku-web
    ports:
      - "8080:8080" # 웹 포트를 환경 변수로 관리
    profiles:
      - "dev-server"
    environment:
      PROFILE: prod
      PROD_DB_URL: ${PROD_DB_URL:-jdbc:mysql://prod-db:3306/piku}
      PROD_DB_USERNAME: ${PROD_DB_USERNAME:-root}
      PROD_DB_PASSWORD: ${PROD_DB_PASSWORD:-1234}
      JWT_KEY: ${JWT_KEY}
    depends_on:
      - prod-db
    networks:
      - piku-network

  prod-db:
    image: mysql:8.0
    container_name: piku-prod-mysql
    ports:
      - "9914:3306" # MySQL 포트를 환경 변수로 관리
    profiles:
      - "prod"
      - "dev-server"
    environment:
      MYSQL_ROOT_PASSWORD: ${PROD_DB_PASSWORD:-1234}
      MYSQL_DATABASE: piku
    volumes:
      - piku-data:/var/lib/mysql
    networks:
      - piku-network


  minio:
    image: minio/minio:latest
    container_name: piku-minio
    ports:
      - "${MINIO_API_PORT:-9000}:9000"    # MinIO API 포트 (환경 변수로 관리 또는 기본값 9000)
      - "${MINIO_CONSOLE_PORT:-9001}:9001" # MinIO Console 포트 (환경 변수로 관리 또는 기본값 9001)
    profiles:
      - "dev"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}       # .env 파일 또는 기본값 minioadmin 사용
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin} # .env 파일 또는 기본값 minioadmin 사용
    volumes:
      - minio-data:/data # MinIO 데이터 지속성을 위한 볼륨
    networks:
      - dev-piku-network # dev 프로필 서비스 접근용
      - piku-network     # prod 프로필 서비스 접근용
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  piku-data:
  dev-piku-data:
  minio-data:
#  minio-data: # MinIO 데이터를 위한 새 볼륨

networks:
  piku-network:
    driver: bridge
  dev-piku-network:
    driver: bridge
